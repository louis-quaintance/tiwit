/**
 * This file was auto-generated by the Titanium Module SDK helper for Android Appcelerator Titanium
 * Mobile Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved. Licensed under the
 * terms of the Apache Public License Please see the LICENSE included with this distribution for
 * details.
 */
package com.tiwit;

import java.util.ArrayList;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.TiApplication;

import ai.wit.sdk.IWitListener;
import ai.wit.sdk.Wit;
import ai.wit.sdk.model.WitOutcome;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

@Kroll.module(name = "Tiwit", id = "com.tiwit")
public class TiwitModule extends KrollModule implements IWitListener {

    private static final String LCAT = "TiwitModule";
    private static Wit wit;

    public TiwitModule() {
        super();
    }

    @Kroll.onAppCreate
    public static void onAppCreate(TiApplication app) {
        Log.d(LCAT, "inside onAppCreate");
    }

    @Kroll.method
    public boolean initialize(String accessToken) {
        try {
            wit = new Wit(accessToken, this);
            wit.enableContextLocation(TiApplication.getInstance().getBaseContext());
            return true;
        } catch (Throwable e) {
            return false;
        }
    }

    @Kroll.method
    public boolean startListening() {
        try {
            wit.startListening();
            return true;
        } catch (Throwable e) {
            return false;
        }
    }

    @Kroll.method
    public boolean stopListening() {
        try {
            wit.stopListening();
            return true;
        } catch (Throwable e) {
            return false;
        }
    }

    @Override
    public void witActivityDetectorStarted() {
        fireEvent("witActivityDetectorStarted", null);
    }

    @Override
    public void witDidGraspIntent(ArrayList<WitOutcome> witOutcome, String messageId, Error error) {
        if (error == null) {
            Gson gson = new GsonBuilder().setPrettyPrinting().create();
            KrollDict params = new KrollDict();
            params.put("message", gson.toJson(witOutcome));
            Log.d(LCAT, "witDidGraspIntent message " + gson.toJson(witOutcome));
            fireEvent("witSuccess", params);
        } else {
            KrollDict params = new KrollDict();
            params.put("message", error.getMessage());
            Log.d(LCAT, "witDidGraspIntent error " + error.getMessage());
            fireEvent("witFailedToRespondCorrectly", params);
        }
    }

    @Override
    public void witDidStartListening() {
        fireEvent("witDidStartListening", null);
    }

    @Override
    public void witDidStopListening() {
        fireEvent("witDidStopListening", null);
    }

    @Override
    public String witGenerateMessageId() {
        return null;
    }

}
